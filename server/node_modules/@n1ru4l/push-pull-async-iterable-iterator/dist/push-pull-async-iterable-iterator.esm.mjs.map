{"version":3,"file":"push-pull-async-iterable-iterator.esm.mjs","sources":["../src/makePushPullAsyncIterableIterator.ts","../src/makeAsyncIterableIteratorFromSink.ts","../src/applyAsyncIterableIteratorToSink.ts","../src/isAsyncIterable.ts"],"sourcesContent":["type Deferred<T> = {\n  resolve: (value: T) => void;\n  reject: (value: unknown) => void;\n  promise: Promise<T>;\n};\n\nfunction createDeferred<T>(): Deferred<T> {\n  const d = {} as Deferred<T>;\n  d.promise = new Promise<T>((resolve, reject) => {\n    d.resolve = resolve;\n    d.reject = reject;\n  });\n  return d;\n}\n\nexport type PushPullAsyncIterableIterator<T> = {\n  /* Push a new value that will be published on the AsyncIterableIterator. */\n  pushValue: (value: T) => void;\n  /* AsyncIterableIterator that publishes the values pushed on the stack with pushValue. */\n  asyncIterableIterator: AsyncIterableIterator<T>;\n};\n\nconst SYMBOL_FINISHED = Symbol();\nconst SYMBOL_NEW_VALUE = Symbol();\n\n/**\n * makePushPullAsyncIterableIterator\n *\n * The iterable will publish values until return or throw is called.\n * Afterwards it is in the completed state and cannot be used for publishing any further values.\n * It will handle back-pressure and keep pushed values until they are consumed by a source.\n */\nexport function makePushPullAsyncIterableIterator<\n  T\n>(): PushPullAsyncIterableIterator<T> {\n  let isRunning = true;\n  const values: Array<T> = [];\n\n  let newValueD = createDeferred<typeof SYMBOL_NEW_VALUE>();\n  let finishedD = createDeferred<typeof SYMBOL_FINISHED>();\n\n  const asyncIterableIterator = (async function* PushPullAsyncIterableIterator(): AsyncIterableIterator<\n    T\n  > {\n    while (true) {\n      if (values.length > 0) {\n        yield values.shift()!;\n      } else {\n        const result = await Promise.race([\n          newValueD.promise,\n          finishedD.promise\n        ]);\n\n        if (result === SYMBOL_FINISHED) {\n          break;\n        }\n      }\n    }\n  })();\n\n  function pushValue(value: T) {\n    if (isRunning === false) {\n      // TODO: Should this throw?\n      return;\n    }\n\n    values.push(value);\n    newValueD.resolve(SYMBOL_NEW_VALUE);\n    newValueD = createDeferred();\n  }\n\n  // We monkey patch the original generator for clean-up\n  const originalReturn = asyncIterableIterator[\"return\"]?.bind(\n    asyncIterableIterator\n  );\n  asyncIterableIterator[\"return\"] = (\n    ...args\n  ): Promise<IteratorResult<T, void>> => {\n    isRunning = false;\n    finishedD.resolve(SYMBOL_FINISHED);\n    return (\n      originalReturn?.(...args) ??\n      Promise.resolve({ done: true, value: undefined })\n    );\n  };\n  const originalThrow = asyncIterableIterator[\"throw\"]?.bind(\n    asyncIterableIterator\n  );\n  asyncIterableIterator[\"throw\"] = (\n    ...args\n  ): Promise<IteratorResult<T, void>> => {\n    isRunning = false;\n    finishedD.resolve(SYMBOL_FINISHED);\n    return (\n      originalThrow?.(...args) ??\n      Promise.resolve({ done: true, value: undefined })\n    );\n  };\n\n  return {\n    pushValue,\n    asyncIterableIterator\n  };\n}\n","import { makePushPullAsyncIterableIterator } from \"./makePushPullAsyncIterableIterator\";\nimport { Sink } from \"./Sink\";\n\nexport const makeAsyncIterableIteratorFromSink = <\n  TValue = unknown,\n  TError = unknown\n>(\n  make: (sink: Sink<TValue, TError>) => () => void\n): AsyncIterableIterator<TValue> => {\n  const {\n    pushValue,\n    asyncIterableIterator\n  } = makePushPullAsyncIterableIterator<TValue>();\n  let dispose: () => void = () => undefined;\n\n  const sink: Sink<TValue, TError> = {\n    next: (value: TValue) => {\n      pushValue(value);\n    },\n    complete: () => {\n      dispose();\n      asyncIterableIterator.return?.();\n    },\n    error: (err: TError) => {\n      asyncIterableIterator.throw?.(err);\n    }\n  };\n\n  dispose = make(sink);\n  return asyncIterableIterator;\n};\n","import { Sink } from \"./Sink\";\n\nexport function applyAsyncIterableIteratorToSink<\n  TValue = unknown,\n  TError = unknown\n>(\n  asyncIterableIterator: AsyncIterableIterator<TValue>,\n  sink: Sink<TValue, TError>\n): () => void {\n  const run = async () => {\n    try {\n      for await (const value of asyncIterableIterator) {\n        sink.next(value);\n      }\n      sink.complete();\n    } catch (err) {\n      sink.error(err);\n    }\n  };\n  run();\n\n  return () => {\n    asyncIterableIterator.return?.();\n  };\n}\n","export function isAsyncIterable(\n  input: unknown\n): input is AsyncIterator<unknown> | AsyncIterableIterator<unknown> {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    // The AsyncGenerator check is for Safari on iOS which currently does not have\n    // Symbol.asyncIterator implemented\n    // That means every custom AsyncIterable must be built using a AsyncGeneratorFunction (async function * () {})\n    ((input as any)[Symbol.toStringTag] === \"AsyncGenerator\" ||\n      (Symbol.asyncIterator && Symbol.asyncIterator in input))\n  );\n}\n"],"names":["createDeferred","d","promise","Promise","resolve","reject","SYMBOL_FINISHED","Symbol","SYMBOL_NEW_VALUE","makePushPullAsyncIterableIterator","isRunning","values","newValueD","finishedD","asyncIterableIterator","PushPullAsyncIterableIterator","length","shift","result","race","pushValue","value","push","originalReturn","bind","args","done","undefined","originalThrow","makeAsyncIterableIteratorFromSink","make","dispose","sink","next","complete","return","error","err","throw","applyAsyncIterableIteratorToSink","run","isAsyncIterable","input","toStringTag","asyncIterator"],"mappings":"AAMA,SAASA,cAAT;AACE,QAAMC,CAAC,GAAG,EAAV;AACAA,EAAAA,CAAC,CAACC,OAAF,GAAY,IAAIC,OAAJ,CAAe,CAACC,OAAD,EAAUC,MAAV;AACzBJ,IAAAA,CAAC,CAACG,OAAF,GAAYA,OAAZ;AACAH,IAAAA,CAAC,CAACI,MAAF,GAAWA,MAAX;AACD,GAHW,CAAZ;AAIA,SAAOJ,CAAP;AACD;;AASD,MAAMK,eAAe,gBAAGC,MAAM,EAA9B;AACA,MAAMC,gBAAgB,gBAAGD,MAAM,EAA/B;AAEA;;;;;;;;SAOgBE;;;AAGd,MAAIC,SAAS,GAAG,IAAhB;AACA,QAAMC,MAAM,GAAa,EAAzB;AAEA,MAAIC,SAAS,GAAGZ,cAAc,EAA9B;AACA,MAAIa,SAAS,GAAGb,cAAc,EAA9B;;AAEA,QAAMc,qBAAqB,GAAI,gBAAgBC,6BAAhB;AAG7B,WAAO,IAAP,EAAa;AACX,UAAIJ,MAAM,CAACK,MAAP,GAAgB,CAApB,EAAuB;AACrB,cAAML,MAAM,CAACM,KAAP,EAAN;AACD,OAFD,MAEO;AACL,cAAMC,MAAM,GAAG,MAAMf,OAAO,CAACgB,IAAR,CAAa,CAChCP,SAAS,CAACV,OADsB,EAEhCW,SAAS,CAACX,OAFsB,CAAb,CAArB;;AAKA,YAAIgB,MAAM,KAAKZ,eAAf,EAAgC;AAC9B;AACD;AACF;AACF;AACF,GAjB6B,EAA9B;;AAmBA,WAASc,SAAT,CAAmBC,KAAnB;AACE,QAAIX,SAAS,KAAK,KAAlB,EAAyB;AACvB;AACA;AACD;;AAEDC,IAAAA,MAAM,CAACW,IAAP,CAAYD,KAAZ;AACAT,IAAAA,SAAS,CAACR,OAAV,CAAkBI,gBAAlB;AACAI,IAAAA,SAAS,GAAGZ,cAAc,EAA1B;AACD;;;AAGD,QAAMuB,cAAc,4BAAGT,qBAAqB,CAAC,QAAD,CAAxB,qBAAG,sBAAiCU,IAAjC,CACrBV,qBADqB,CAAvB;;AAGAA,EAAAA,qBAAqB,CAAC,QAAD,CAArB,GAAkC,CAChC,GAAGW,IAD6B;;;AAGhCf,IAAAA,SAAS,GAAG,KAAZ;AACAG,IAAAA,SAAS,CAACT,OAAV,CAAkBE,eAAlB;AACA,8BACEiB,cADF,oBACEA,cAAc,CAAG,GAAGE,IAAN,CADhB,8BAEEtB,OAAO,CAACC,OAAR,CAAgB;AAAEsB,MAAAA,IAAI,EAAE,IAAR;AAAcL,MAAAA,KAAK,EAAEM;AAArB,KAAhB,CAFF;AAID,GATD;;AAUA,QAAMC,aAAa,6BAAGd,qBAAqB,CAAC,OAAD,CAAxB,qBAAG,uBAAgCU,IAAhC,CACpBV,qBADoB,CAAtB;;AAGAA,EAAAA,qBAAqB,CAAC,OAAD,CAArB,GAAiC,CAC/B,GAAGW,IAD4B;;;AAG/Bf,IAAAA,SAAS,GAAG,KAAZ;AACAG,IAAAA,SAAS,CAACT,OAAV,CAAkBE,eAAlB;AACA,6BACEsB,aADF,oBACEA,aAAa,CAAG,GAAGH,IAAN,CADf,6BAEEtB,OAAO,CAACC,OAAR,CAAgB;AAAEsB,MAAAA,IAAI,EAAE,IAAR;AAAcL,MAAAA,KAAK,EAAEM;AAArB,KAAhB,CAFF;AAID,GATD;;AAWA,SAAO;AACLP,IAAAA,SADK;AAELN,IAAAA;AAFK,GAAP;AAID;;MCpGYe,iCAAiC,GAI5CC,IAJ+C;AAM/C,QAAM;AACJV,IAAAA,SADI;AAEJN,IAAAA;AAFI,MAGFL,iCAAiC,EAHrC;;AAIA,MAAIsB,OAAO,GAAe,MAAMJ,SAAhC;;AAEA,QAAMK,IAAI,GAAyB;AACjCC,IAAAA,IAAI,EAAGZ,KAAD;AACJD,MAAAA,SAAS,CAACC,KAAD,CAAT;AACD,KAHgC;AAIjCa,IAAAA,QAAQ,EAAE;AACRH,MAAAA,OAAO;AACPjB,MAAAA,qBAAqB,CAACqB,MAAtB,oBAAArB,qBAAqB,CAACqB,MAAtB;AACD,KAPgC;AAQjCC,IAAAA,KAAK,EAAGC,GAAD;AACLvB,MAAAA,qBAAqB,CAACwB,KAAtB,oBAAAxB,qBAAqB,CAACwB,KAAtB,CAA8BD,GAA9B;AACD;AAVgC,GAAnC;AAaAN,EAAAA,OAAO,GAAGD,IAAI,CAACE,IAAD,CAAd;AACA,SAAOlB,qBAAP;AACD,CA3BM;;SCDSyB,iCAIdzB,uBACAkB;AAEA,QAAMQ,GAAG,GAAG;AACV,QAAI;AACF,iBAAW,MAAMnB,KAAjB,IAA0BP,qBAA1B,EAAiD;AAC/CkB,QAAAA,IAAI,CAACC,IAAL,CAAUZ,KAAV;AACD;;AACDW,MAAAA,IAAI,CAACE,QAAL;AACD,KALD,CAKE,OAAOG,GAAP,EAAY;AACZL,MAAAA,IAAI,CAACI,KAAL,CAAWC,GAAX;AACD;AACF,GATD;;AAUAG,EAAAA,GAAG;AAEH,SAAO;AACL1B,IAAAA,qBAAqB,CAACqB,MAAtB,oBAAArB,qBAAqB,CAACqB,MAAtB;AACD,GAFD;AAGD;;SCxBeM,gBACdC;AAEA,SACE,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,KAAK,IADV;AAGA;AACA;AACEA,EAAAA,KAAa,CAACnC,MAAM,CAACoC,WAAR,CAAb,KAAsC,gBAAtC,IACCpC,MAAM,CAACqC,aAAP,IAAwBrC,MAAM,CAACqC,aAAP,IAAwBF,KANnD,CADF;AASD;;;;"}